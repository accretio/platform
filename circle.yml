general:
  build_dir: lab

machine:
  environment:
    PROJECT_NAME: accretio-platform
    CLUSTER_NAME: platform-staging
    CLOUDSDK_COMPUTE_ZONE: us-central1-c
    GOOGLE_APPLICATION_CREDENTIALS: ${HOME}/gcloud-service-key.json
  services:
    - docker

dependencies:
  pre:
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update --version 147.0.0
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update --version 147.0.0 kubectl
    - echo $ACCT_AUTH | base64 --decode -i > ${HOME}/gcloud-service-key.json
    - sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    - sudo /opt/google-cloud-sdk/bin/gcloud config set project $PROJECT_NAME
    - sudo /opt/google-cloud-sdk/bin/gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
 
  
checkout:
  post:
    - echo "export default function setDevConfig(config) {}" > config_dev.js

test:
  override:
    - "true"
    
deployment:
  staging:
    branch: dockerize-lab
    commands:
      - sudo /opt/google-cloud-sdk/bin/gcloud --quiet config set container/cluster platform-staging
      - sudo /opt/google-cloud-sdk/bin/gcloud --quiet container clusters get-credentials platform-staging
      - docker build -t gcr.io/${PROJECT_NAME}/lab:$CIRCLE_SHA1 .
      - docker tag gcr.io/${PROJECT_NAME}/lab:$CIRCLE_SHA1 gcr.io/${PROJECT_NAME}/lab:latest
      - sudo /opt/google-cloud-sdk/bin/gcloud docker -- push gcr.io/${PROJECT_NAME}/lab:latest
      - sudo chown -R ubuntu:ubuntu /home/ubuntu/.kube
      - pwd
      - ls -l
      - echo $GOOGLE_APPLICATION_CREDENTIALS
      - kubectl apply -f ops/es-service.yml
      - kubectl apply -f ops/lab-service.yml
      - kubectl apply -f ops/es-deployment.yml
      - kubectl apply -f ops/lab-deployment.yml
